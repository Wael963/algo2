// FUNCTION dot_pro (v1 , v2 : ARRAY_OF_INTEGER [10]) : INTEGER
// VAR
//     i , dot : INTEGER
// BEGIN
//     dot := 0
//     i := 0
//     IF (v1.length <> v2.length) THEN
//         write ("vectore with diff size we cannot calc dot prod")
//         RETURN NAN
//     END_IF

//     WHILE (i < v1.length) DO
//         dot := dot + v1[i] * v2[i]
//         i++
//     END_WHILE

//     RETURN dot ;
// END

PROCEDURE dot_pro(v1,v2:ARRAY_OF_INTEGER [10],VAR ps:INTEGER)
VAR
    i:INTEGER:=0
BEGIN
    IF (v1.length <> v2.length) THEN
        Write ("vectore with diff size we cannot calc dot prod")

    ELSE
        WHILE (i < v1.length) DO
            ps := ps + v1[i] * v2[i]
            i++
        END_WHILE
    END_IF
END

ALGORITHM orth-vect
VAR
    v1 , v2 :  ARRAY_OF INTEGER[10];
    ps : INTEGER := 0
BEGIN
    Write("Give me first Vect")
    FOR i FROM 0 TO v1.length-1 STEP 1  DO
        Read (v1[i])
    END_FOR
    Write("Give me Second Vect")
        FOR i FROM 0 TO v2.length-1 STEP 1  DO
        Read (v2[i])
    END_FOR

    dot_pro (v1 ,v2 , ps)

    IF (dot === 0) THEN
        Write ("v1 and v2 orth")
    ELSE
        Write ("v1 and v2 are not orth")
    END_IF

END